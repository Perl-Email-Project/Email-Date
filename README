NAME
    Email::Date - Find and Format Date Headers

SYNOPSIS
      use Email::Date;
  
      my $email = join '', <>;
      my $date  = find_date($email);
      print $date->ymd;
  
      my $header = format_date($date->epoch);
  
      Email::Simple->create(
          header => [
              Date => $header,
          ],
          body => '...',
      );

DESCRIPTION
    RFC 2822 defines the "Date:" header. It declares the header a required
    part of an email message. The syntax for date headers is clearly laid
    out. Stil, even a perfectly planned world has storms. The truth is, many
    programs get it wrong. Very wrong. Or, they don't include a "Date:"
    header at all. This often forces you to look elsewhere for the date, and
    hoping to find something.

    For this reason, the tedious process of looking for a valid date has
    been encapsulated in this software. Further, the process of creating RFC
    compliant date strings is also found in this software.

  Functions
    find_date
          my $time_piece = find_date $email;

        "find_date" accepts an email message in any format Email::Abstract
        can understand. It looks through the email message and finds a date,
        converting it to a Time::Piece object.

    format_date
          my $date = format_date; # now
          my $date = format_date( time - 60*60 ); # one hour ago

        "format_date" accepts an epoch value, such as the one returned by
        "time". It returns a string representing the date and time of the
        input, as specified in RFC 2822. If no input value is provided, the
        current value of "time" is used.

SEE ALSO
    Email::Abstract, Time::Piece, Date::Parse, perl.

AUTHOR
    Casey West, <casey@geeknest.com>.

COPYRIGHT
      Copyright (c) 2004 Casey West.  All rights reserved.
      This module is free software; you can redistribute it and/or modify it
      under the same terms as Perl itself.

